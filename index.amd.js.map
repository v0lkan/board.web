{"version":3,"sources":["index.es6"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA6BO,SAAS;;;;oBACV,MAAM;;kBACM,IAAI;;AACnC,IAAM,IAAI,GAAG,IAAI,CAAC;;;;;;;;AAQlB,IAAI,MAAM,GAAG,SAAT,MAAM,CAAI,YAAY,EAAE,MAAM,EAAK;AACnC,OAAK,MAAM,CAAC;;AAEZ,MAAI,GAAG,GAAG,2BAAS,CAAC;;AAEpB,KAAG,CAAC,GAAG,CAAC,8BAAc,CAAC,UAfnB,IAAI,EAeoB,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACnD,KAAG,CAAC,GAAG,CAAC,SAAS,EAAE,8BAAc,CAAC,YAAY,CAAC,CAAC,CAAC;;AAEjD,KAAG,CAAC,GAAG,CAAC,SAAS,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE;;;AAGlC,YApBA,gBAAgB,EAoBC,UArBjB,IAAI,EAqBkB,SAAS,EAAE,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACpE,CAAC,CAAC;;AAEH,KAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;CACpB,CAAC;;QAEM,MAAM,GAAN,MAAM","file":"index.amd.js","sourcesContent":["'use strict';\n\n/*\n *  ______                     _________\n *  ___  /_____________ _____________  /\n *  __  __ \\  __ \\  __ `/_  ___/  __  /\n *  _  /_/ / /_/ / /_/ /_  /   / /_/ /\n *  /_.___/\\____/\\__,_/ /_/    \\__,_/\n *      a minimalist dashboard and monitoring solution.\n *\n * This program is distributed under the terms of the MIT license.\n * Please see `LICENSE.md` file for details.\n *\n * Send your comments and suggestions toâ€¦\n * <https://github.com/v0lkan/board/issues>\n */\n\n/**\n * @module board.web\n *\n * This is a web server \"Factory\"; that is, it's goal is to use different server\n * technologies to serve the board files based on the environment.\n *\n * - An express static file server for development;\n * - An NGINX application for production.\n *\n * Currently it only creates the express.js server.\n */\n\nimport express from 'express';\nimport {join} from 'path';\nimport {createReadStream} from 'fs';\nconst PORT = 4244;\n\n/**\n * Creates a board web server.\n *\n * @param pathToBoards - Path to board templates.\n * @param boards - Board configuration object.\n */\nlet create = (pathToBoards, boards) => {\n    void boards;\n\n    let app = express();\n\n    app.use(express.static(join(__dirname, 'public')));\n    app.use('boards/', express.static(pathToBoards));\n\n    app.get('/:board', function(req, res) {\n        // TODO: sanity check\n\n        createReadStream(join(__dirname, 'layout/index.html')).pipe(res);\n    });\n\n    app.listen(PORT);\n};\n\nexport {create};\n"]}